{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/read-csvdata/filter.pipe.ts","webpack:///src/app/read-csvdata/read-csvdata.component.ts","webpack:///src/app/read-csvdata/read-csvdata.component.html","webpack:///src/app/read-csvdata/read-csvdataModal.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","FilterPipe","items","searchText","filter","item","Object","some","key","String","toLowerCase","includes","name","ReadCSVDataComponent","records","sortDir","list","sortReverse","sortArr","$event","text","files","srcElement","isValidCSVFile","input","target","reader","FileReader","readAsText","onload","csvData","result","csvRecordsArray","split","headersRow","getHeaderArray","headerData","getDataRecordsArrayFromCSVFile","length","listItem","tempItem1","tempItem2","orderDate","replaceAll","onerror","console","log","alert","fileReset","headerLength","csvArr","i","rowData","csvRecord","orderId","trim","customerId","deliveryPincode","push","file","endsWith","csvRecordsArr","headers","headerArray","j","csvReader","nativeElement","value","event","parentElement","firstChild","data","sortCol","currentTarget","classList","contains","remove","add","colName","sort","a","b","localeCompare","uploadListener","CSVRecord","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'parseCSV';\n}\n","<h5>Ant Stack POC</h5>\n<br>\n<app-read-csvdata></app-read-csvdata>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { ReadCSVDataComponent } from './read-csvdata/read-csvdata.component';\n\nimport { FilterPipe } from './read-csvdata/filter.pipe';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ReadCSVDataComponent,\n    FilterPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\n\r\n//Used default filter pipe available in angular\r\nexport class FilterPipe implements PipeTransform {\r\n  transform(items: any[], searchText: string): any[] {\r\n    if (!items) return [];\r\n    if (!searchText) return items;\r\n  \r\n    return items.filter(item => {\r\n      return Object.keys(item).some(key => {\r\n        return String(item[key]).toLowerCase().includes(searchText.toLowerCase());\r\n      });\r\n    });\r\n   }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { CSVRecord } from './read-csvdataModal';\n\n@Component({\n  selector: 'app-read-csvdata',\n  templateUrl: './read-csvdata.component.html',\n  styleUrls: ['./read-csvdata.component.css']\n})\nexport class ReadCSVDataComponent implements OnInit {\n  title = 'Angular7AppReadCSV';  \n  public records: any[] = [];  \n  searchText: string;\n  sortDir = 1;//1= 'ASE' -1= DSC\n  headerData:any;\n  list = [];\n\n  sortType: string;\n  sortReverse: boolean = false;\n\n  @ViewChild('csvReader') csvReader: any;  \n\n  constructor() { \n    this.sortArr('orderId');\n  }\n\n  ngOnInit(): void {\n  }\n\n  uploadListener($event: any): void {  \n  \n    let text = [];  \n    let files = $event.srcElement.files;  \n  \n    if (this.isValidCSVFile(files[0])) {  \n  \n      let input = $event.target;  \n      let reader = new FileReader();  \n      reader.readAsText(input.files[0]);  \n  \n      reader.onload = () => {  \n        let csvData = reader.result;  \n        let csvRecordsArray = (<string>csvData).split(/\\r\\n|\\n/);  \n  \n        let headersRow = this.getHeaderArray(csvRecordsArray);  \n        this.headerData = this.getHeaderArray(csvRecordsArray); \n  \n        this.records = this.getDataRecordsArrayFromCSVFile(csvRecordsArray, headersRow.length);  \n        this.list=this.records;\n\n\n        for (let listItem of this.list) {\n          var tempItem1 = listItem.items;\n          var tempItem2 = listItem.orderDate;\n          tempItem1 = tempItem1.replaceAll(\":\", \"-\");\n          tempItem1 = tempItem1.split(\";\");\n          tempItem2 = tempItem2.replaceAll(\"-\",\"/\");\n          listItem.items = [];\n          listItem.items = tempItem1;\n          listItem.orderDate = [];\n          listItem.orderDate = tempItem2;\n        }\n      };  \n  \n      reader.onerror = function () {  \n        console.log('error is occured while reading file!');  \n      };  \n  \n    } else {  \n      alert(\"Please import valid .csv file.\");  \n      this.fileReset();  \n    }  \n  }\n\n  getDataRecordsArrayFromCSVFile(csvRecordsArray: any, headerLength: any) {  \n    let csvArr = [];  \n  \n    for (let i = 1; i < csvRecordsArray.length; i++) {  \n      let rowData = (<string>csvRecordsArray[i]).split(',');  \n      if (rowData.length == headerLength) {  \n        let csvRecord: CSVRecord = new CSVRecord();  \n        csvRecord.orderId = rowData[0].trim();  \n        csvRecord.customerId = rowData[1].trim();  \n        csvRecord.deliveryPincode = rowData[2].trim();  \n        csvRecord.orderDate = rowData[3].trim();  \n        csvRecord.items = rowData[4].trim();  \n        csvArr.push(csvRecord);  \n      }  \n    }  \n    return csvArr;  \n  }  \n  isValidCSVFile(file: any) {  \n    return file.name.endsWith(\".csv\");  \n  }  \n  \n  getHeaderArray(csvRecordsArr: any) {  \n    let headers = (<string>csvRecordsArr[0]).split(',');  \n    let headerArray = [];  \n    for (let j = 0; j < headers.length; j++) {  \n      headerArray.push(headers[j]);  \n    }  \n    console.log(\"Header Array\",headerArray);\n    return headerArray;  \n  }  \n  \n  fileReset() {  \n    this.csvReader.nativeElement.value = \"\";  \n    this.records = [];  \n  }\n\n  onSortClick(event) {\n    console.log(event);\n    console.log(event.target.parentElement.firstChild.data);\n    let sortCol = event.target.parentElement.firstChild.data;\n    let target = event.currentTarget,\n      classList = target.classList;\n\n    if (classList.contains('fa-chevron-up')) {\n      classList.remove('fa-chevron-up');\n      classList.add('fa-chevron-down');\n      this.sortDir=-1;\n    } else {\n      classList.add('fa-chevron-up');\n      classList.remove('fa-chevron-down');\n      this.sortDir=1;\n    }\n    this.sortArr(sortCol);\n  }\n\n  sortArr(colName:any){\n    this.records.sort((a,b)=>{\n      a= a[colName].toLowerCase();\n      b= b[colName].toLowerCase();\n      return a.localeCompare(b) * this.sortDir;\n    });\n  }\n\n\n\n}","\n<div class=\"container\">\n<input type=\"file\" #csvReader name=\"Upload CSV\" id=\"txtFileUpload\" (change)=\"uploadListener($event)\" accept=\".csv\" />    \n<br>\n<br>\n\n<div class=\"form-group mb-4\" *ngIf=\"records.length > 0\">\n    <label class=\"form-control\"><strong>Pin Code / Date : </strong></label>\n    <input class=\"form-control\" type=\"text\" [(ngModel)]=\"searchText\" placeholder=\"Filter\">\n  </div> \n<br>\n<br>\n\n<table class=\"borderBlack\" *ngIf=\"(records | filter: searchText).length > 0\">    \n  <thead>    \n    <tr >    \n      <th *ngFor=\"let headerObject of headerData\">{{headerObject}}<i (click)=\"onSortClick($event)\" class=\"my-icon fa fa-chevron-up\"></i></th>         \n    </tr>    \n  </thead>    \n  <tbody>    \n    <tr *ngFor=\"let record of records | filter: searchText;let i = index;\">    \n      <td> <span>{{record.orderId}}</span> </td>    \n      <td> <span>{{record.customerId}}</span> </td>    \n      <td> <span>{{record.deliveryPincode}}</span> </td>    \n      <td> <span>{{record.orderDate}}</span> </td>    \n      <td ><span ><p *ngFor=\"let item of record.items\">{{item}}</p></span> </td>       \n    </tr>    \n  </tbody>    \n</table>  \n</div>\n","export class CSVRecord {  \r\n\tpublic orderId: any;  \r\n\tpublic customerId: any;  \r\n\tpublic deliveryPincode: any;  \r\n\tpublic orderDate: any;  \r\n\tpublic items: any;     \r\n} ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}